# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Ruby for Rails app
      - image: circleci/ruby:2.5-stretch-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
          POSTGRES_PASSWORD: ''
          REDIS_HOST: 127.0.0.1
          REDIS_CACHE_DB: 1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Redis
      - image: circleci/redis:5-alpine
      # Postgres
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: lcboapi_test
          POSTGRES_PASSWORD: ''

    working_directory: ~/lcboapi

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install system dependencies
          command: |
            DEBIAN_FRONTEND=noninteractive \
            sudo apt-get -yqq update && \
            sudo apt-get -yqq install \
              software-properties-common \
              apt-transport-https \
              acl \
              zip \
              postgresql-client-9.6 \
              libpq-dev \
              nodejs \
              yarn

      # Copy over secrets.yml for CI
      - run: cp config/secrets.yml.ci config/secrets.yml

      # Install bundle
      - run:
          name: install Rubygems via bundler
          command: |
            sudo gem update --system && \
            gem install --force bundler && \
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: |
          RAILS_ENV=test bundle exec rails db:drop && \
          RAILS_ENV=test bundle exec rails db:create && \
          RAILS_ENV=test bundle exec rails db:structure:load

        # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
